# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 13  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, conv_2d, [32, 3, 2, 0.75]]  # 0-P1/2
  - [-1, 1, InvertedResidual, [64, 1, 2, 0.75]]  # 1

  - [-1, 1, InvertedResidual, [128, 2, 2, 0.75]]  # 2-p2
  - [-1, 1, InvertedResidual, [128, 1, 2, 0.75]]  # 3
  - [-1, 1, InvertedResidual, [128, 1, 2, 0.75]]  # 4

  - [-1, 1, InvertedResidual, [256, 2, 2, 0.75]]  # 5-P3
  - [-1, 1, MobileViTBlockv2, [256, 128, 2, 0.75]] # out 6

  - [-1, 1, InvertedResidual, [384, 2, 2, 0.75]]  # 7-P4
  - [-1, 1, MobileViTBlockv2, [384, 192, 4, 0.75]] # out 8

  - [-1, 1, InvertedResidual, [512, 2, 2, 0.75]]  # 9-p5
  - [-1, 1, MobileViTBlockv2, [512, 256, 3,0.75]] # out 10


# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 8], 1, Concat, [1]]  # cat backbone P4
  - [-1, 1, C2f, [72]]  # 13

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 6], 1, Concat, [1]]  # cat backbone P3
  - [-1, 1, C2f, [36]]  # 16 (P3/8-small)

  - [-1, 1, Conv, [36, 3, 2]]
  - [[-1, 13], 1, Concat, [1]]  # cat head P4
  - [-1, 1, C2f, [72]]  # 19 (P4/16-medium)

  - [-1, 1, Conv, [72, 3, 2]]
  - [[-1, 10], 1, Concat, [1]]  # cat head P5
  - [-1, 1, C2f, [144]]  # 22 (P5/32-large)

  - [[16, 19, 22], 1, Detect, [nc]]  # Detect(P3, P4, P5)
